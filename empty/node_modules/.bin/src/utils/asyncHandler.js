//async handler implemented with promises
const asyncHandler = (requestHandler)=>{
    return (req,res,next)=>{
        Promise.resolve(requestHandler(req,res,next)).catch((err)=>next(err))
    }
}

 

export {asyncHandler}


// const asyncHandler =()=>{}
// const asyncHandler=(func)=>()=>{}
// const ayyncHandler=(func)=>async()=>{}

    //try catch asynchandler

// const asyncHandler =(fn)=>async(req,res,next)=>{
//     try {
//         await fn(req,res,next)
//     } catch (error) {
//         res.status(err.code||500).json({
//             success:fasle,
//             message:err.message
//         })
//     }
// }



